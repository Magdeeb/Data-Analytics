#!/usr/bin/env python
# coding: utf-8

# In[1]:


from read_db.CH import Getch
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import pandahouse as ph
from datetime import date
from scipy import stats
import numpy as np

–ó–∞–¥–∞–Ω–∏–µ ‚Ññ 1
–ò—Ç–∞–∫, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å: —É –Ω–∞—Å –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –ê–ê-—Ç–µ—Å—Ç–∞ —Å '2022-04-17' –ø–æ '2022-04-23'. –í–∞–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å–∏–º—É–ª—è—Ü–∏—é, –∫–∞–∫ –±—É–¥—Ç–æ –º—ã –ø—Ä–æ–≤–µ–ª–∏ 10000 –ê–ê-—Ç–µ—Å—Ç–æ–≤. –ù–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –≤–∞–º –Ω—É–∂–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–≤—ã–±–æ—Ä–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ–º –≤ 500 —é–∑–µ—Ä–æ–≤ –∏–∑ 2 –∏ 3 —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –≥—Ä—É–ø–ø—ã. –ü—Ä–æ–≤–µ—Å—Ç–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —ç—Ç–∏—Ö –ø–æ–¥–≤—ã–±–æ—Ä–æ–∫ t-test–æ–º.

1. –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª—É—á–∏–≤—à–∏—Ö—Å—è 10000 p-values.

2. –ü–æ—Å—á–∏—Ç–∞—Ç—å, –∫–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç p values –æ–∫–∞–∑–∞–ª—Å—è –º–µ–Ω—å—à–µ –ª–∏–±–æ —Ä–∞–≤–µ–Ω 0.05

3. –ù–∞–ø–∏—Å–∞—Ç—å –≤—ã–≤–æ–¥ –ø–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–º—É –ê–ê-—Ç–µ—Å—Ç—É, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ —Å–ø–ª–∏—Ç–æ–≤–∞–Ω–∏—è.
# In[2]:


df = Getch("""SELECT exp_group, 
                user_id,
                sum(action = 'like') as likes,
                sum(action = 'view') as views,
                likes/views as ctr
        FROM simulator_20220520.feed_actions 
        WHERE toDate(time) between '2022-04-17' and '2022-04-23'
                and exp_group in (2,3)
        GROUP BY exp_group, user_id
    """).df


# In[3]:


big =[]
for x in range(10000):
    group_2 = df[df.exp_group == 2][['user_id', 'ctr']].sample(500, replace=True)
    group_3 = df[df.exp_group == 3][['user_id', 'ctr']].sample(500, replace=True)
    p_values = stats.ttest_ind(group_2.ctr, group_3.ctr, equal_var=False)
    big.append(abs(p_values[1]))
    
data = pd.DataFrame()
data['p'] = pd.DataFrame(big)


# In[4]:


data[data.p <= 0.05].count()


# In[5]:


sns.histplot(data)

–í—ã–≤–æ–¥: –ß—É—Ç—å –±–æ–ª—å—à–µ 5%(538) –∑–Ω–∞—á–µ–Ω–∏–π p –º–µ–Ω—å—à–µ 0.05, —Å–∏—Å—Ç–µ–º–∞ —Å–ø–ª–∏—Ç–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, —Ä–∞—Å–ø—Ä–µ–¥–∏–ª–µ–Ω–∏–µ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ.–ó–∞–¥–∞–Ω–∏–µ ‚Ññ 2
–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø—Ä–æ–≤–µ–ª–∏ –≤–º–µ—Å—Ç–µ —Å –∫–æ–º–∞–Ω–¥–æ–π –¥–∞—Ç–∞ —Å–∞–π–µ–Ω—Ç–∏—Å—Ç–æ–≤. –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏–ª —Å 2022-04-24 –ø–æ 2022-04-30 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. –î–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ –±—ã–ª–∏ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω—ã 2 –∏ 1 –≥—Ä—É–ø–ø—ã. 

–í –≥—Ä—É–ø–ø–µ 2 –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –æ–¥–∏–Ω –∏–∑ –Ω–æ–≤—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤, –≥—Ä—É–ø–ø–∞ 1 –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–Ω—Ç—Ä–æ–ª—è. 

–û—Å–Ω–æ–≤–Ω–∞—è –≥–∏–ø–æ—Ç–µ–∑–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ –Ω–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –≤–æ 2-–π –≥—Ä—É–ø–ø–µ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ —É–≤–µ–ª–∏—á–µ–Ω–∏—é CTR. 

–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –êB-—Ç–µ—Å—Ç–∞. 
    –í—ã–±—Ä–∞—Ç—å –º–µ—Ç–æ–¥ –∞–Ω–∞–ª–∏–∑–∞ –∏ —Å—Ä–∞–≤–Ω–∏—Ç—å CTR –≤ –¥–≤—É—Ö –≥—Ä—É–ø–ø–∞—Ö (–º—ã —Ä–∞–∑–±–∏—Ä–∞–ª–∏ t-—Ç–µ—Å—Ç, –ü—É–∞—Å—Å–æ–Ω–æ–≤—Å–∫–∏–π –±—É—Ç—Å—Ç—Ä–µ–ø, —Ç–µ—Å—Ç –ú–∞–Ω–Ω–∞-–£–∏—Ç–Ω–∏, t-—Ç–µ—Å—Ç –Ω–∞ —Å–≥–ª–∞–∂–µ–Ω–Ω–æ–º ctr (Œ±=5) –∞ —Ç–∞–∫–∂–µ t-—Ç–µ—Å—Ç –∏ —Ç–µ—Å—Ç –ú–∞–Ω–Ω–∞-–£–∏—Ç–Ω–∏ –ø–æ–≤–µ—Ä—Ö –±–∞–∫–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è).
    –°—Ä–∞–≤–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —ç—Ç–∏–º–∏ —Ç–µ—Å—Ç–∞–º–∏. –ê –µ—â–µ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≥–ª–∞–∑–∞–º–∏. –ü–æ—á–µ–º—É —Ç–µ—Å—Ç—ã —Å—Ä–∞–±–æ—Ç–∞–ª–∏ —Ç–∞–∫ –∫–∞–∫ —Å—Ä–∞–±–æ—Ç–∞–ª–∏? 
    –û–ø–∏—à–∏—Ç–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ —Ç–∞–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –º–æ–≥–ª–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏. –¢—É—Ç –Ω–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, –ø–æ–¥—É–º–∞–π—Ç–µ.
    –ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é, –±—É–¥–µ–º –ª–∏ –º—ã —Ä–∞—Å–∫–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –Ω–∞ –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ –≤—Å–µ-—Ç–∞–∫–∏ –Ω–µ —Å—Ç–æ–∏—Ç.
# In[3]:


test = Getch("""SELECT exp_group, 
                user_id,
                sum(action = 'like') as likes,
                sum(action = 'view') as views,
                likes/views as ctr
        FROM simulator_20220520.feed_actions 
        WHERE toDate(time) between '2022-04-24' and '2022-04-30'
                and exp_group in (1,2)
        GROUP BY exp_group, user_id
    """).df


# In[4]:


sns.histplot(data = test, x='ctr', hue='exp_group', palette = ['r', 'b'], alpha=0.5, kde=False)


# In[5]:


def get_smothed_ctr(user_likes, user_views, global_ctr, alpha):
    smothed_ctr = (user_likes + alpha * global_ctr) / (user_views + alpha)
    return smothed_ctr

global_ctr_1 = test[test.exp_group == 1].likes.sum()/test[test.exp_group == 1].views.sum()
global_ctr_2 = test[test.exp_group == 2].likes.sum()/test[test.exp_group == 2].views.sum()

group1 = test[test.exp_group == 2].copy()
group1['smothed_ctr'] = test.apply(lambda x: get_smothed_ctr(x['likes'], x['views'], global_ctr_1, 5), axis=1)

sns.distplot(group1.ctr, kde = False)
sns.distplot(group1.smothed_ctr, kde = False)


# In[13]:


A_gt_B = 0
for _ in range(10000):
    A_gt_B+= test[test.exp_group == 1].ctr.sample().values[0] > test[test.exp_group == 2].ctr.sample().values[0]
    
stats.mannwhitneyu(test[test.exp_group == 2].ctr, test[test.exp_group == 1].ctr, alternative = 'two-sided')
print(f'–í {A_gt_B/100}% —Å–ª—É—á–∞–µ–≤ A > B')


# In[7]:


def bootstrap(likes1, views1, likes2, views2, n_bootstrap=3000):

    poisson_bootstraps1 = stats.poisson(1).rvs(
        (n_bootstrap, len(likes1))).astype(np.int64)

    poisson_bootstraps2 = stats.poisson(1).rvs(
            (n_bootstrap, len(likes2))).astype(np.int64)
    
    globalCTR1 = (poisson_bootstraps1*likes1).sum(axis=1)/(poisson_bootstraps1*views1).sum(axis=1)
    
    globalCTR2 = (poisson_bootstraps2*likes2).sum(axis=1)/(poisson_bootstraps2*views2).sum(axis=1)

    return globalCTR1, globalCTR2


# In[17]:


likes1 = test[test.exp_group == 1].likes.to_numpy()
views1 = test[test.exp_group == 1].views.to_numpy()
likes2 = test[test.exp_group == 2].likes.to_numpy()
views2 = test[test.exp_group == 2].views.to_numpy()

ctr1, ctr2 = bootstrap(likes1, views1, likes2, views2)

sns.histplot(ctr1)
sns.histplot(ctr2)


# In[16]:


sns.histplot(ctr2 - ctr1)


# In[ ]:


–í—ã–≤–æ–¥:–ü—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ –≤–∏–¥–∏–º, —á—Ç–æ –≤–æ 2–æ–π –≥—Ä—É–ø–ø–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –Ω–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, —è —Ö–æ—Ç–µ–ª –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–µ—Ç–æ–¥ –ú–∞–Ω–∞-–£–∏—Ç–Ω–∏ –Ω–∞ —Å–≥–ª–∞–∂–µ–Ω–Ω–æ–º ctr, 
–Ω–æ –ø—Ä–∏ –µ–≥–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≥—Ä–∏—Ñ–∏–∫ –Ω–µ —Å–∏–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª—Å—è,  –ø–æ—ç—Ç–æ–º—É —è —Ç–∞–∫ –∂–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –ø—É–∞—Å—Å–æ–Ω–æ–≤—Å–∫–∏–º –±—É—Ç—Å—Ç—Ä–µ–ø–æ–º. –ò–∑ –æ–±–æ–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤—ã–≤–æ–¥, 
—á—Ç–æ –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π –≥—Ä—É–ø–ø–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ 5% –≤—ã—à–µ (–Ω–∞ 5% —á–∞—â–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è) —á–µ–º –≤ —Ç–µ—Å—Ç–æ–≤–æ–π, —Ç.–µ. –Ω–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –Ω–µ–ª—å–∑—è –Ω–∞–∑–≤–∞—Ç—å —É–¥–∞—á–Ω—ã–º.

–ó–∞–¥–∞–Ω–∏–µ ‚Ññ3

    –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ç–µ—Å—Ç –º–µ–∂–¥—É –≥—Ä—É–ø–ø–∞–º–∏ 0 –∏ 3 –ø–æ –º–µ—Ç—Ä–∏–∫–µ –ª–∏–Ω–µ–∞—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ª–∞–π–∫–æ–≤. –í–∏–¥–Ω–æ –ª–∏ –æ—Ç–ª–∏—á–∏–µ? –°—Ç–∞–ª–æ –ª–∏ ùëù‚àíùë£ùëéùëôùë¢ùëí –º–µ–Ω—å—à–µ?

    –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ç–µ—Å—Ç –º–µ–∂–¥—É –≥—Ä—É–ø–ø–∞–º–∏ 1 –∏ 2 –ø–æ –º–µ—Ç—Ä–∏–∫–µ –ª–∏–Ω–µ–∞—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ª–∞–π–∫–æ–≤. –í–∏–¥–Ω–æ –ª–∏ –æ—Ç–ª–∏—á–∏–µ? –°—Ç–∞–ª–æ –ª–∏ ùëù‚àíùë£ùëéùëôùë¢ùëí –º–µ–Ω—å—à–µ?
# In[34]:


group = Getch("""SELECT exp_group, 
                user_id,
                sum(action = 'like') as likes,
                sum(action = 'view') as views,
                likes/views as ctr
        FROM simulator_20220520.feed_actions 
        WHERE toDate(time) between '2022-04-24' and '2022-04-30'
                and exp_group in (0, 1, 2, 3)
        GROUP BY exp_group, user_id
    """).df


# In[35]:


xx_1 = group[group.exp_group == 0].copy()
xx_2 = group[group.exp_group ==3].copy()
stats.ttest_ind(xx_1.ctr, xx_2.ctr, equal_var=False)


# In[31]:


ctrcontrol_1 = sum(xx_1.likes)/sum(xx_1.views)
ctrcontrol_2 = sum(xx_2.likes)/sum(xx_2.views)
xx_1['linearised_likes'] = xx_1.likes -  ctrcontrol_1 * xx_1.views
xx_2['linearised_likes'] = xx_2.likes -  ctrcontrol_2 * xx_2.views
sns.distplot(xx_1['linearised_likes'], kde = False)
sns.distplot(xx_2['linearised_likes'], kde = False)


# In[32]:


stats.ttest_ind(xx_1['linearised_likes'], xx_2['linearised_likes'], equal_var=False)


# In[ ]:





# In[36]:


yy_1 = group[group.exp_group ==1].copy()
yy_2 = group[group.exp_group ==2].copy()
stats.ttest_ind(yy_1.ctr, yy_2.ctr, equal_var=False)


# In[33]:


ctrcontrol_21 = sum(yy_1.likes)/sum(yy_1.views)
ctrcontrol_22 = sum(yy_2.likes)/sum(yy_2.views)
yy_1['linearised_likes'] = yy_1.likes -  ctrcontrol_21 * yy_1.views
yy_2['linearised_likes'] = yy_2.likes -  ctrcontrol_22 * yy_2.views
sns.distplot(yy_1['linearised_likes'], kde = False)
sns.distplot(yy_2['linearised_likes'], kde = False)


# In[28]:


stats.ttest_ind(yy_1['linearised_likes'], yy_2['linearised_likes'], equal_var=False)


# In[ ]:


–í—ã–≤–æ–¥: –í –≤—ã–±–æ—Ä–∫–∞—Ö 0 –∏ 3 –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ –æ—Ç–ª–∏—á–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã, p-value —É–º–µ–Ω—å—à–∏–ª–æ—Å—å
–í –≤—ã–±–æ—Ä–∫–∞—Ö 1 –∏ 2 –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ –æ—Ç–ª–∏—á–∏—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∏–ª—å–Ω—ã–µ, p-value –Ω–∞–æ–±–æ—Ä–æ—Ç —É–≤–µ–ª–∏—á–∏–ª–æ—Å—å

